import csv
import timeit
from BTrees.OOBTree import OOBTree
import pandas as pd

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è CSV-—Ñ–∞–π–ª—É ===
DATA_PATH = "task_2_oobtree_vs_dict/data/generated_items_data.csv"

def load_items_from_csv(path):
    items = []
    with open(path, newline='', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            item = {
                "ID": int(row["ID"]),
                "Name": row["Name"],
                "Category": row["Category"],
                "Price": float(row["Price"])
            }
            items.append(item)
    return items

# === –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä ===
def add_item_to_tree(tree, item):
    tree[item["ID"]] = item

def add_item_to_dict(dictionary, item):
    dictionary[item["ID"]] = item

# === –î—ñ–∞–ø–∞–∑–æ–Ω–Ω—ñ –∑–∞–ø–∏—Ç–∏ ===
def range_query_tree(tree, min_price, max_price):
    return [item for _, item in tree.items() if min_price <= item["Price"] <= max_price]

def range_query_dict(dictionary, min_price, max_price):
    return [item for item in dictionary.values() if min_price <= item["Price"] <= max_price]

# === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ===
def run_test():
    items = load_items_from_csv(DATA_PATH)

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä
    tree = OOBTree()
    dictionary = {}

    for item in items:
        add_item_to_tree(tree, item)
        add_item_to_dict(dictionary, item)

    print("üì¶ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω—ñ –¥–æ OOBTree —Ç–∞ dict.")
    print(f"üî¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤: {len(items)}")

    # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø–∏—Ç—É
    min_price = 50
    max_price = 100

    print(f"\nüîé –î—ñ–∞–ø–∞–∑–æ–Ω–Ω–∏–π –∑–∞–ø–∏—Ç: —Ü—ñ–Ω–∞ –º—ñ–∂ {min_price} —Ç–∞ {max_price}\n")

    # –ó–∞–º—ñ—Ä —á–∞—Å—É OOBTree
    time_tree = timeit.timeit(lambda: range_query_tree(tree, min_price, max_price), number=100)

    # –ó–∞–º—ñ—Ä —á–∞—Å—É dict
    time_dict = timeit.timeit(lambda: range_query_dict(dictionary, min_price, max_price), number=100)

    print("‚è±Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:\n")
    print(f"Total range_query time for OOBTree: {time_tree:.6f} seconds")
    print(f"Total range_query time for Dict:    {time_dict:.6f} seconds")

    print("\nüìà –õ–æ–≥—ñ—á–Ω—ñ –≤–∏—Å–Ω–æ–≤–∫–∏:")
    print("-" * 60)
    if time_tree < time_dict:
        print("‚úÖ OOBTree –≤–∏–∫–æ–Ω—É—î –¥—ñ–∞–ø–∞–∑–æ–Ω–Ω—ñ –∑–∞–ø–∏—Ç–∏ –∑–Ω–∞—á–Ω–æ —à–≤–∏–¥—à–µ –∑–∞–≤–¥—è–∫–∏ –≤–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω—ñ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ.")
    else:
        print("‚ö†Ô∏è Dict –ø–æ–∫–∞–∑–∞–≤ –∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ö–æ—á–∞ —Ü–µ –Ω–µ —Ç–∏–ø–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫.")
    print("üîç –£ OOBTree –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –º–µ—Ç–æ–¥ .items() ‚Äî –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π –ø—Ä–∏ –≤–µ–ª–∏–∫–∏—Ö –æ–±—Å—è–≥–∞—Ö –¥–∞–Ω–∏—Ö.")
    print("üîé –£ dict –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø–æ–≤–Ω–∏–π –ª—ñ–Ω—ñ–π–Ω–∏–π –ø–µ—Ä–µ–±—ñ—Ä —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.")
    print("-" * 60)

if __name__ == "__main__":
    run_test()
